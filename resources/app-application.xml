<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
	default-lazy-init="true">
	
	<description>Spring Common Configuration</description>

    <!-- 自动扫描@Service,@Entity -->
	<context:component-scan base-package="com.lyods.service" /> 	
    <context:component-scan	base-package="com.lyods.model" />
    <!-- 启用基于注解的配置 --> 
	<context:annotation-config/> 
	
	<!-- Email template -->
	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
      <property name="velocityProperties">
	    <props>
	      <prop key="resource.loader">class</prop>
	      <prop key="class.resource.loader.class">
	        org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
	      </prop>
	    </props>
	  </property>
    </bean>
	<!-- 日志记录公用模块 -->
	<bean id="historyLog" class="com.lyods.security.HistoryLog" depends-on="histMainDao,histFieldsDao"/>
	
    <!-- file upload -->
  <!--   <bean id="multipartResolver" 
     class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
     one of the properties available; the maximum file size in bytes 1GB
     <property name="maxUploadSize" value="1000000000"/>
    </bean> -->
    
	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan">
		 <list>
		    <value>com.lyods.model</value>
		 </list>
		</property>		
	</bean>	
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="org.springside.modules.persistence.Hibernates">
				<constructor-arg ref="dataSource"/>
			</bean>
		</property>
	</bean>
    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="com.lyods.dao"  transaction-manager-ref="txManager" entity-manager-factory-ref="entityManagerFactory"/>
    <bean id="jdbcDao" class="com.lyods.dao.JdbcDao">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Jpa 事务配置 -->
	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<!-- 使用annotation定义事务 
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />
	-->
	
	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) --> 
    <tx:advice id="txAdvice" transaction-manager="txManager">
      <!-- the transactional semantics... -->
      <tx:attributes>
        <tx:method name="get*"  propagation="REQUIRED" read-only="true"/>
	    <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
	    <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
	    <tx:method name="load*" propagation="REQUIRED" read-only="true"/>
	    <tx:method name="*" rollback-for="Exception"/>
      </tx:attributes>
    </tx:advice>
    <!-- ensure that the above transactional advice runs for any execution Spring Framework 3.1 Reference Documentation 313
     of an operation defined by the FooService interface -->
    <aop:config>
      <aop:pointcut id="txPointCut" expression="execution(* com.lyods.service.*.*(..))"/>
      <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut" order="1"/>   
    </aop:config> 
	
	<!-- JSR303 Validator定义 -->
 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	
	<!-- production环境 -->
 	<beans profile="production">
 		<!-- 对JDBC配置进行解密  --> 
	    <bean id="JDBCPwdEncryptor" class="com.lyods.security.JDBCPwdEncryptor">  
	           <property name="locations">
	               <list>
	                   <value>classpath*:/jdbc-mysql.properties</value>
	               </list>
	           </property>
	    </bean>
 		<!-- <context:property-placeholder ignore-unresolvable="true"
			location="classpath*:/jdbc.properties" /> -->			
		<!-- 数据源配置, 使用DBCP数据库连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		
			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${dbcp.maxActive}" />
			<property name="maxIdle" value="${dbcp.maxIdle}" />
			<property name="defaultAutoCommit" value="false" />
			<!-- 连接Idle一个小时后超时 -->
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
		</bean>		
		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" />-->
	</beans>
</beans>